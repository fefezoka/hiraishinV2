// <auto-generated />
using System;
using Hiraishin.Data.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace Hiraishin.Data.Context.Migrations
{
    [DbContext(typeof(HiraishinContext))]
    [Migration("20250701205955_initial")]
    partial class initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.17")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Hiraishin.Domain.Dto.Hiraishin.Match", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("Assists")
                        .HasColumnType("integer");

                    b.Property<int>("ChampLevel")
                        .HasColumnType("integer");

                    b.Property<int>("ChampionId")
                        .HasColumnType("integer");

                    b.Property<string>("ChampionName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("Deaths")
                        .HasColumnType("integer");

                    b.Property<long>("GameDuration")
                        .HasColumnType("bigint");

                    b.Property<bool>("GameEndedInEarlySurrender")
                        .HasColumnType("boolean");

                    b.Property<int>("Kills")
                        .HasColumnType("integer");

                    b.Property<int>("LeaderboardEntryId")
                        .HasColumnType("integer");

                    b.Property<string>("Puuid")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("Summoner1Id")
                        .HasColumnType("integer");

                    b.Property<int>("Summoner2Id")
                        .HasColumnType("integer");

                    b.Property<int>("TotalMinionsKilled")
                        .HasColumnType("integer");

                    b.Property<bool>("Win")
                        .HasColumnType("boolean");

                    b.HasKey("Id");

                    b.HasIndex("LeaderboardEntryId");

                    b.ToTable("Match");
                });

            modelBuilder.Entity("Hiraishin.Domain.Entities.LeaderboardEntry", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("ArrivedOnTop")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("Day")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("Index")
                        .HasColumnType("integer");

                    b.Property<int>("LeaguePoints")
                        .HasColumnType("integer");

                    b.Property<int?>("Losses")
                        .HasColumnType("integer");

                    b.Property<string>("Puuid")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("QueueType")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Rank")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Tier")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("TotalLP")
                        .HasColumnType("integer");

                    b.Property<int?>("Wins")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("Puuid", "Day", "QueueType")
                        .IsUnique();

                    b.ToTable("LeaderboardEntry");
                });

            modelBuilder.Entity("Hiraishin.Domain.Dto.Hiraishin.Match", b =>
                {
                    b.HasOne("Hiraishin.Domain.Entities.LeaderboardEntry", "LeaderboardEntry")
                        .WithMany("Matches")
                        .HasForeignKey("LeaderboardEntryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("LeaderboardEntry");
                });

            modelBuilder.Entity("Hiraishin.Domain.Entities.LeaderboardEntry", b =>
                {
                    b.Navigation("Matches");
                });
#pragma warning restore 612, 618
        }
    }
}
